{"version":3,"sources":["images/virtual_student_logo_placeholder.png","components/home/Home.js","components/calendar/Calendar.js","components/login/Login.js","components/reservations/Reservations.js","components/robot/Robot.js","components/router/Router.js","components/static/Header.js","components/static/Footer.js","components/static/SideMenu.js","App.js","serviceWorker.js","aws-exports.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","_this","this","react_default","a","createElement","className","card","html","buttons","text","onClick","props","history","push","Component","withRouter","Calendar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selectedDate","Date","date","setState","_this2","datePicker","shortcuts","minDate","maxDate","setFullYear","getFullYear","timePrecision","onChange","newDate","handleChange","value","showActionsBar","style","color","Colors","BLUE1","divider","background","BLUE2","tag","key","icon","dist_default","format","rightIcon","intent","pathname","Login","Reservation","Robot","handleKeyDown","e","preventDefault","stopPropagation","combo","getKeyComboString","nativeEvent","handleBlur","video","document","querySelector","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","error","console","log","onKeyDown","onBlur","tabIndex","autoplay","id","width","renderKeyCombo","Fragment","keyCombo","Content","Route","exact","path","component","Reservations","logoImage","require","Header","navbar","navbarGroup","align","Alignment","LEFT","src","alt","navbarHeading","navbarDivider","minimal","RIGHT","Auth","signOut","data","err","Footer","App","BrowserRouter","static_Header","Router","static_Footer","Boolean","window","location","hostname","match","awsmobile","aws_app_analytics","aws_cognito_identity_pool_id","aws_cognito_region","aws_content_delivery","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_cloudfront","aws_content_delivery_cloudfront_domain","aws_mandatory_sign_in","aws_mobile_analytics_app_id","aws_mobile_analytics_app_region","aws_project_id","aws_project_name","aws_project_region","aws_resource_name_prefix","aws_sign_in_enabled","aws_user_pools","aws_user_pools_id","aws_user_pools_mfa_type","aws_user_pools_web_client_id","Amplify","configure","awsMobile","AppWithAuth","withAuthenticator","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24bb2ca8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/virtual_student_logo_placeholder.1d16a0bb.png\";","import React, { Component } from \"react\";\nimport { Card, H5, Button } from \"@blueprintjs/core\";\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <Card>\n          <H5>Welcome to Virtual Student</H5>\n          <p>\n            You can start reserving telecommuting robots by clicking reserve.\n          </p>\n          <Button\n            text=\"Reserve\"\n            onClick={() => this.props.history.push(\"/calendar\")}\n          />\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React, { Component } from \"react\";\nimport { DatePicker } from \"@blueprintjs/datetime\";\nimport { Tag, Button, Card, Colors, Divider } from \"@blueprintjs/core\";\nimport \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\"; //css for the calendar\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: new Date()\n    };\n  }\n  handleChange(date) {\n    this.setState({ selectedDate: date });\n  }\n  render() {\n    return (\n      <Card className=\"Calendar\">\n        <DatePicker\n          shortcuts={false}\n          minDate={new Date()} //cannot reserve before today\n          maxDate={\n            new Date(new Date().setFullYear(new Date().getFullYear() + 1))\n          } //only allowed one year ahead of today\n          timePrecision\n          onChange={newDate => this.handleChange(newDate)}\n          value={this.state.selectedDate}\n          showActionsBar\n          style={{ color: Colors.BLUE1 }}\n        />\n        <Divider />\n\n        <Card style={{ background: Colors.BLUE2 }}>\n          <h5>Date Selected</h5>\n          <p>To confirm this date, click confirm</p>\n          <Tag key={this.state.selectedDate} icon=\"calendar\">\n            <Moment date={this.state.selectedDate} format=\"LLLL\" />\n          </Tag>\n          <Divider />\n          <Button\n            rightIcon=\"arrow-right\"\n            intent=\"success\"\n            text=\"Confirm\"\n            onClick={() => {\n              this.props.history.push({\n                pathname: \"/reservations\",\n                state: { selectedDate: this.state.selectedDate }\n              });\n            }}\n          />\n        </Card>\n      </Card>\n    );\n  }\n}\n\nexport default withRouter(Calendar);\n","import React, { Component } from \"react\";\n\nclass Login extends Component {\n  render() {\n    return (\n      <div className=\"Login\">\n        <p>Login</p>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\n//import { Code, getKeyComboString, KeyCombo, Card } from \"@blueprintjs/core\";\nimport { Tag, Card, H5, Button } from \"@blueprintjs/core\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\n\nexport default class Reservation extends Component {\n  constructor() {\n    super();\n    this.state = { selectedDate: new Date() };\n  }\n  render() {\n    return (\n      <Card>\n        <H5>This is the date you chose:</H5>\n        <Tag key={this.state.selectedDate} icon=\"calendar\">\n          <Moment date={this.state.selectedDate} format=\"LLLL\" />\n        </Tag>\n        <p>To checkin to your reservation, click check-in</p>\n        <Button\n          rightIcon=\"arrow-right\"\n          intent=\"success\"\n          text=\"Check-in\"\n          onClick={() => {\n            this.props.history.push({\n              pathname: \"/robot\",\n              state: { selectedDate: this.state.selectedDate }\n            });\n          }}\n        />\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Code, getKeyComboString, KeyCombo, Card } from \"@blueprintjs/core\";\nimport Iframe from \"react-iframe\";\n\n/* TODO:\n  arrows move\n  s mutes sound\n  m mutes mic\n  v mutes video\n*/\n\nclass Robot extends Component {\n  constructor() {\n    super();\n    this.state = {\n      combo: null\n    };\n  }\n  componentDidMount() {\n    var video = document.querySelector(\"#videoElement\"); //for camera access\n    if (navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(function(stream) {\n          video.srcObject = stream;\n        })\n        .catch(function(error) {\n          console.log(\"Something went wrong!\");\n        });\n    }\n  }\n\n  render() {\n    return (\n      <Card\n        onKeyDown={this.handleKeyDown}\n        onBlur={this.handleBlur}\n        tabIndex={0}\n      >\n        {/* <Iframe\n          url=\"http://www.youtube.com/embed/xDMP3i36naA\"\n          width=\"450px\"\n          height=\"450px\"\n          id=\"myId\"\n          className=\"myClassname\"\n          display=\"initial\"\n          position=\"relative\"\n          allowFullScreen\n        /> */}\n        <video autoplay=\"true\" id=\"videoElement\" width=\"450px\" />\n        <br />\n        {this.renderKeyCombo()}\n      </Card>\n    );\n  }\n\n  renderKeyCombo() {\n    const { combo } = this.state;\n    if (combo == null) {\n      return \"Click here then press a key combo\";\n    } else {\n      return (\n        <>\n          <KeyCombo combo={combo} />\n          <Code>{combo}</Code>\n        </>\n      );\n    }\n  }\n\n  handleKeyDown = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const combo = getKeyComboString(e.nativeEvent);\n    this.setState({ combo });\n  };\n\n  handleBlur = () => this.setState({ combo: null });\n}\n\nexport default Robot;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"../home/Home.js\";\nimport Calendar from \"../calendar/Calendar.js\";\nimport Login from \"../login/Login.js\";\nimport Reservations from \"../reservations/Reservations.js\";\nimport Robot from \"../robot/Robot\";\n\nclass Content extends Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"inner-content\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route path=\"/robot\" component={Robot} />\n          <Route path=\"/reservations\" component={Reservations} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport {\n  Alignment,\n  AnchorButton,\n  Navbar,\n  NavbarGroup,\n  NavbarDivider,\n  NavbarHeading\n} from \"@blueprintjs/core\";\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\n//docs: https://blueprintjs.com/docs/#blueprint\n\nconst logoImage = require(\"../../images/virtual_student_logo_placeholder.png\");\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"App-header\">\n        <Navbar>\n          {/* className={Classes.DARK} */}\n          <NavbarGroup align={Alignment.LEFT}>\n            <div className=\"header_logo\">\n              <img src={logoImage} className=\"w50-h50\" alt=\"logo\" />\n            </div>\n            <NavbarHeading>Virtual Student</NavbarHeading>\n            <NavbarDivider />\n            <AnchorButton\n              text=\"Home\"\n              minimal\n              icon=\"home\"\n              onClick={() => this.props.history.push(\"/\")}\n            />\n            <AnchorButton\n              text=\"Create Reservation\"\n              minimal\n              icon=\"calendar\"\n              onClick={() => this.props.history.push(\"/calendar\")}\n            />\n            <AnchorButton\n              text=\"My Reservations\"\n              minimal\n              icon=\"timeline-events\"\n              onClick={() => this.props.history.push(\"/reservation\")}\n            />\n            <AnchorButton\n              text=\"Robot\"\n              minimal\n              icon=\"rig\"\n              onClick={() => this.props.history.push(\"/robot\")}\n            />\n          </NavbarGroup>\n          <NavbarGroup align={Alignment.RIGHT}>\n            <AnchorButton\n              text=\"Log out\"\n              minimal\n              rightIcon=\"log-out\"\n              onClick={() => {\n                Auth.signOut()\n                  .then(data => console.log(data))\n                  .catch(err => console.log(err));\n              }}\n            />\n          </NavbarGroup>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return <div className=\"App-footer\" />;\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { Menu, MenuDivider, MenuItem } from \"@blueprintjs/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n//docs: https://blueprintjs.com/docs/#blueprint\n\nclass SideMenu extends Component {\n  render() {\n    return (\n      <div className=\"App-menu\">\n        <Menu>\n          <MenuItem icon=\"home\" onClick={this.handleClick} text=\"Home\" />\n          <MenuItem\n            icon=\"new-object\"\n            onClick={this.handleClick}\n            text=\"New object\"\n          />\n          <MenuItem\n            icon=\"new-link\"\n            onClick={this.handleClick}\n            text=\"New link\"\n          />\n          <MenuDivider />\n          <MenuItem text=\"Settings...\" icon=\"cog\">\n            <MenuItem icon=\"tick\" text=\"Save on edit\" />\n            <MenuItem icon=\"blank\" text=\"Compile on edit\" />\n          </MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default SideMenu;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Content from \"./components/router/Router.js\";\nimport Header from \"./components/static/Header.js\";\nimport Footer from \"./components/static/Footer.js\";\nimport SideMenu from \"./components/static/SideMenu.js\";\n\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\n//import \"@blueprintjs/datetime/lib/css/blueprint-datetime.css\";\n//import \"@blueprintjs/select/lib/css/blueprint-select.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App bp3-dark\">\n          <Header />\n          {/* <SideMenu /> */}\n          <Content />\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// WARNING: DO NOT EDIT. This file is Auto-Generated by AWS Mobile Hub. It will be overwritten.\n\n// Copyright 2017-2018 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.\n// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to\n// copy, distribute and modify it.\n\n// AWS Mobile Hub Project Constants\nconst awsmobile = {\n    'aws_app_analytics': 'enable',\n    'aws_cognito_identity_pool_id': 'us-east-1:3f3eaf54-5bbe-4a95-acff-e731fbb2e542',\n    'aws_cognito_region': 'us-east-1',\n    'aws_content_delivery': 'enable',\n    'aws_content_delivery_bucket': 'virtualstudent-hosting-mobilehub-1143763081',\n    'aws_content_delivery_bucket_region': 'us-east-1',\n    'aws_content_delivery_cloudfront': 'enable',\n    'aws_content_delivery_cloudfront_domain': 'dkdtsk2r1vkog.cloudfront.net',\n    'aws_mandatory_sign_in': 'enable',\n    'aws_mobile_analytics_app_id': 'ad050af8aed04d09bf0adaf796453fac',\n    'aws_mobile_analytics_app_region': 'us-east-1',\n    'aws_project_id': 'd28786cb-f8ab-48f9-8a2b-a66484ff1721',\n    'aws_project_name': 'virtual-student-2019-03-04-12-42-18',\n    'aws_project_region': 'us-east-1',\n    'aws_resource_name_prefix': 'virtualstudent-mobilehub-1143763081',\n    'aws_sign_in_enabled': 'enable',\n    'aws_user_pools': 'enable',\n    'aws_user_pools_id': 'us-east-1_9JyXSNmiR',\n    'aws_user_pools_mfa_type': 'OFF',\n    'aws_user_pools_web_client_id': '3id7j1qphggsholnpeuc4e1kv5',\n}\n\nexport default awsmobile;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//aws stuff\nimport awsMobile from \"./aws-exports\";\nimport Amplify from \"aws-amplify\";\nimport { withAuthenticator } from \"aws-amplify-react\";\nAmplify.configure(awsMobile);\nconst AppWithAuth = withAuthenticator(App);\n//aws stuff\n\nReactDOM.render(<AppWithAuth />, document.getElementById(\"root\")); //this replaces v\n//ReactDOM.render(<App />, document.getElementById('root')); //this is replaced by ^\n\n//hosted at -> http://virtualstudent-hosting-mobilehub-1143763081.s3-website.us-east-1.amazonaws.com/\n//can get personal instance hosted here -> http://virtualstudent-hosting-mobilehub-1143763081.s3-website.us-east-1.amazonaws.com/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}